# Upgrade map for WebSocket/SSE
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_name n8n.dev.company hooks.dev.company;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name n8n.dev.company;

  # TLS (private CA)
  ssl_certificate     /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/server.key;
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # If you also want HSTS (enable once youâ€™re sure):
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Forward original request info to n8n (behind proxy)
  proxy_set_header Host              $host;
  proxy_set_header X-Forwarded-Host  $host;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

  # WebSocket/SSE
  proxy_http_version 1.1;
  proxy_set_header Upgrade    $http_upgrade;
  proxy_set_header Connection $connection_upgrade;
  proxy_read_timeout 3600;
  proxy_send_timeout 3600;
  proxy_buffering off;

  client_max_body_size 20m;

  location / {
    proxy_pass http://127.0.0.1:5678;
  }
}

# Optional: dedicate a second hostname for webhooks (same backend)
server {
  listen 443 ssl http2;
  server_name hooks.dev.company;

  ssl_certificate     /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/server.key;

  proxy_set_header Host              $host;
  proxy_set_header X-Forwarded-Host  $host;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

  proxy_http_version 1.1;
  proxy_set_header Upgrade    $http_upgrade;
  proxy_set_header Connection $connection_upgrade;
  proxy_read_timeout 3600;
  proxy_send_timeout 3600;
  proxy_buffering off;

  client_max_body_size 20m;

  location / {
    proxy_pass http://127.0.0.1:5678;
  }
}
